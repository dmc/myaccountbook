/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.Budgets;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BudgetsRecord extends UpdatableRecordImpl<BudgetsRecord> implements Record3<String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>accountbook.budgets.accounttitle_id</code>.
     */
    public void setAccounttitleId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>accountbook.budgets.accounttitle_id</code>.
     */
    public String getAccounttitleId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>accountbook.budgets.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>accountbook.budgets.user_id</code>.
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>accountbook.budgets.budget_amount</code>.
     */
    public void setBudgetAmount(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>accountbook.budgets.budget_amount</code>.
     */
    public Integer getBudgetAmount() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Budgets.BUDGETS.ACCOUNTTITLE_ID;
    }

    @Override
    public Field<String> field2() {
        return Budgets.BUDGETS.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Budgets.BUDGETS.BUDGET_AMOUNT;
    }

    @Override
    public String component1() {
        return getAccounttitleId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getBudgetAmount();
    }

    @Override
    public String value1() {
        return getAccounttitleId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getBudgetAmount();
    }

    @Override
    public BudgetsRecord value1(String value) {
        setAccounttitleId(value);
        return this;
    }

    @Override
    public BudgetsRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public BudgetsRecord value3(Integer value) {
        setBudgetAmount(value);
        return this;
    }

    @Override
    public BudgetsRecord values(String value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BudgetsRecord
     */
    public BudgetsRecord() {
        super(Budgets.BUDGETS);
    }

    /**
     * Create a detached, initialised BudgetsRecord
     */
    public BudgetsRecord(String accounttitleId, String userId, Integer budgetAmount) {
        super(Budgets.BUDGETS);

        setAccounttitleId(accounttitleId);
        setUserId(userId);
        setBudgetAmount(budgetAmount);
    }
}
